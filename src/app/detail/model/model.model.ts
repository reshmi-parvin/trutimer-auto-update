export interface GetAllResponse{
    result: {
        multiTenancy: {
            isEnabled: boolean;
            ignoreFeatureCheckForHostUsers: boolean;
            sides: {
                host: number;
                tenant: number
            }
        };
        session: {
            userId: number;
            tenantId: number;
            impersonatorUserId: string | null;
            impersonatorTenantId: string | null;
            multiTenancySide: number
        };
        localization: {
            currentCulture: {
                name: string;
                displayName: string
            };
            languages: languages[];
            currentLanguage: {
                name: string;
                displayName: string;
                icon: string;
                isDefault: boolean;
                isDisabled: boolean;
                isRightToLeft: boolean;
            };
            sources: Sources[];
            values: {
                Abp: {
                    AllOfTheseFeaturesMustBeEnabled: string;
                    AllOfThesePermissionsMustBeGranted: string;
                    AtLeastOneOfTheseFeaturesMustBeEnabled: string;
                    AtLeastOneOfThesePermissionsMustBeGranted: string;
                    CurrentUserDidNotLoginToTheApplication: string;
                    DefaultFromSenderDisplayName: string;
                    DefaultFromSenderEmailAddress: string;
                    DefaultLanguage: string;
                    DomainName: string;
                    FeatureIsNotEnabled: string;
                    MainMenu: string;
                    Password: string;
                    ReceiveNotifications: string;
                    SmtpHost: string;
                    SmtpPort: string;
                    TimeZone: string;
                    UseDefaultCredentials: string;
                    Username: string;
                    UseSSL: string;
                };
                AbpWeb: {
                    AreYouSure: string;
                    Cancel: string;
                    DefaultError: string;
                    DefaultError401: string;
                    DefaultError403: string;
                    DefaultError404: string;
                    DefaultErrorDetail: string.;
                    DefaultErrorDetail401: string;
                    DefaultErrorDetail403: string;
                    DefaultErrorDetail404: string;
                    EntityNotFound: string;
                    InternalServerError: string;
                    ValidationError: string;
                    ValidationNarrativeTitle: string;
                    Yes: Yes
                };
                AbpZero: {
                    CanNotDeleteAdminUser:string;
                    CanNotDeleteStaticRole: string;
                    CanNotRenameAdminUser:string;
                    Email: string;
                    EmailSecurityCodeBody: string;
                    EmailSecurityCodeSubject: string;
                    Identity.ConcurrencyFailure: string;
                    Identity.DefaultError: string;
                    Identity.DuplicateEmail: string;
                    Identity.DuplicateRoleName: string;
                    Identity.DuplicateUserName: string;
                    Identity.InvalidEmail: string;
                    Identity.InvalidPasswordHasherCompatibilityMode: string;
                    Identity.InvalidPasswordHasherIterationCount: string;
                    Identity.InvalidRoleName: string;
                    Identity.InvalidToken: string;
                    Identity.InvalidUserName: string;
                    Identity.LoginAlreadyAssociated: string;
                    Identity.PasswordMismatch: string;
                    Identity.PasswordRequireDigit: string;
                    Identity.PasswordRequireLower: string;
                    Identity.PasswordRequireNonAlphanumeric: string;
                    Identity.PasswordRequireUpper: string
                    Identity.PasswordTooShort: string;
                    Identity.RoleNotFound: string;
                    Identity.UserAlreadyHasPassword: string;
                    Identity.UserAlreadyInRole: string;
                    Identity.UserLockedOut: string;
                    Identity.UserLockoutNotEnabled: string;
                    Identity.UserNameNotFound: string;
                    Identity.UserNotInRole: string;
                    InvalidFeatureValue: string;
                    InvalidTenancyName: string;
                    OrganizationUnitDuplicateDisplayNameWarning: string;
                    RoleDisplayNameIsAlreadyTaken: string;
                    RoleNameIsAlreadyTaken: string;
                    Sms: string;
                    SmsSecurityCodeMessage: string;
                    TenancyNameIsAlreadyTaken: string.
                };
                Tracker: {
                    About: string;
                    AccountDeactivated: string;
                    Actions: string;
                    AddMore: string;
                    AddTimeTracker: string;
                    AddTrackTime: string;
                    AdminEmailAddress: string;
                    Administration: string;
                    AdminPassword: string;
                    All: string;
                    already exists! Given end time cannot be same with the existing end time:  string;
                    APIKey: string;
                    ApikeyDeleteWarningMessage: string;
                    ApikeyExitError: string;
                    ApiKeyInvalidError: string;
                    AppLogo: string;
                    AppSettings: string;
                    AppSettingsDetails: string;
                    AppSettingsLogo: string;
                    AreYouSureWantToDelete: string;
                    Back: string;
                    BaseCamp: string;
                    BaseURL: string;
                    CanBeEmptyToLoginAsHost: string;
                    Cancel: string;
                    cannot be lesser than existing end time and cannot be within range:  string;
                    Change: string;
                    ChangeLanguage: string;
                    ChangePassword: string;
                    ChangeTenant: string;
                    CheckIfUserTimeTrackWithinRange: string;
                    Clear: string;
                    ClearAll: string;
                    ClearOthers: string;
                    ClientDetails: string;
                    ClientUsers: string;
                    ConfirmNewPassword: string;
                    ConfirmPassword: string;
                    ConsectiveScreensots: string;
                    CouldNotCompleteLoginOperation: string;
                    CouldNotValidateExternalUser: string;
                    Create: string;
                    CreateEmailSettings: string;
                    CreateNewClient: string;
                    CreateNewClientUser: string;
                    CreateNewRole: string;
                    CreateNewSource: string;
                    CreateNewTenant: string;
                    CreateNewUser: string;
                    CreateOrUpdateUserApiKey: string;
                    CreateOrUpdateUserApikeys: string;
                    CreateProjectBaseUrl: string;
                    CreateSettings: string;
                    CreateSources: string;
                    CreateTask: string;
                    CreateTimeSheet: string;
                    CurrentPassword: string;
                    CurrentTenant: string;
                    CurrentUserPermission: string;
                    DailyMailMinTime: string;
                    DailyMailValue: string;
                    Dashboard: string;
                    DatabaseConnectionString: string;
                    DefaultFromAddress: string;
                    DefaultFromDisplayName: string;
                    DefaultPasswordIs: string;
                    Delete: string;
                    DeleteNewClientUser: string;
                    DeleteRole: string;
                    DeleteSources: string;
                    DeleteTenant: string;
                    DeleteTrackTime: string;
                    DeleteUser: string;
                    DeleteUserApiKey: string;
                    DeleteUserApikeys: string;
                    description: string;
                    DisplayName: string;
                    DomainName: string;
                    DoneMessage:  string ;
                    DurationCannotBeNegative: string;
                    Edit: string;
                    EditClient: string;
                    EditEmailSettings: string;
                    EditRole: string;
                    EditSettings: string;
                    EditSource: string;
                    EditSources: string;
                    EditTenant: string;
                    EditTrackTime: string;
                    EditUser: string;
                    EmailAddress: string;
                    EmailIsNotValid: string;
                    EmailSettings: string;
                    EmployeeCode: string;
                    EmployeeName: string;
                    EmployeeNames: string;
                    EmpTotalTrackTimeDetails: string;
                    EndTime: string;
                    ErrorMessageNoData: string;
                    Filter: string;
                    ForgotPassword: string;
                    FormIsNotValidMessage: string;
                    FullName: string;
                    GeneralSettings: string;
                    GetAllProjectsforUsers: string;
                    GetAllSources: string;
                    GetAllSourceTypes: string;
                    GetAllTasks: string;
                    GetAllTasksforUsers: string;
                    GetAllTrackTime: string;
                    GetAppSettingsLogo: string;
                    GetEmailSettings: string;
                    GetEmpDetails: string;
                    GetProjectBaseUrl: string;
                    GetSourceNameType: string;
                    GetTask: string;
                    GetTrackTime: string;
                    GetUserApiKey:  string;
                    GetUserApiKeys: string;
                    GetUserProfileIcon: string;
                    Given time range already exist or Start Time greater than End Time: string;
                    HomePage: string;
                    IdleTimeDurationInMinutes: string;
                    IncorrectURL: string;
                    InvalidEmailAddress: string;
                    InvalidPasswordResetCode: string;
                    InvalidPasswordResetCode_Detail: string;
                    InvalidPattern: string;
                    InvalidUserNameOrPassword: string;
                    IsActive: string;
                    LabelOptions: string;
                    LeaveEmptyToSwitchToHost: string;
                    LogIn: string;
                    LoginFailed: string;
                    LoginForTenants: string;
                    Logout: string;
                    MinimumVersion: string;
                    MissingURL: string;
                    MultiLevelMenu: string;
                    MyAccount: string;
                    Name: string;
                    NameSurname: string;
                    NewPassword: string;
                    NewPasswordRepeat: string;
                    No: string;
                    NoTasksAvailable: string;
                    NotSelected: string;
                    Off: string;
                    On: string;
                    OnlyAlphabetsAreAllowed: string;
                    Optional: string;
                    OrLoginWith: string;
                    Pages: string;
                    PairsDoNotMatch: string;
                    Password: string;
                    PasswordMatch: string;
                    PasswordRepeat: string;
                    PasswordResetMailSentMessage: string;
                    PasswordsDoNotMatch: string;
                    PasswordsDontMatch: string;
                    PasswordsMustBeAtLeast8CharactersContainLowercaseUppercaseNumber: string;
                    PdfDownload: string;
                    Permissions: string;
                    PleaseEnterAtLeastNCharacter: string;
                    PleaseEnterLoginInformation: string;
                    PleaseEnterNoMoreThanNCharacter: string;
                    PleaseEnterYourNewPassword: string;
                    PleaseWait: string;
                    PositiveValue: string;
                    PreviousPasswordUsed: string;
                    ProfileImage: string;
                    ProfilePicture: string;
                    ProjectBaseUrl: string;
                    ProjectName: string;
                    ProjectReport: string;
                    Projects: string;
                    ProjectsNotAvailable: string;
                    ProjectsUser: string;
                    RedmineErrorMessage: string;
                    Refresh: string;
                    Register: string;
                    RegisterFormUserNameInvalidMessage: string;
                    RememberMe: string;
                    ResetPassword: string;
                    ResetPasswordStepOneInfo: string;
                    ResetPasswordStepTwoInfo: string;
                    RoleDeleteWarningMessage: string;
                    RoleDescription: string;
                    RoleName: string;
                    Roles: string;
                    Save: string;
                    SaveAll: string;
                    SavedSuccessfully: string;
                    ScreenshotByDate: string;
                    ScreenshotDelete: string;
                    ScreenshotDeleteWarningMessage: string;
                    ScreenshotImage: string;
                    ScreenshotPage: string;
                    Screenshots: string;
                    Search: string;
                    SearchWithThreeDot: string;
                    SendTestEmail: string;
                    Settings: string;
                    Settings_InsertOrUpdate: string;
                    Settings_ShowSettingValue: string;
                    SettingsShow: string;
                    Setup: string;
                    SgTrackerProjects: string;
                    SgTrackerProjectsLastTrackTime: string;
                    SgTrackerProjectsTasksUser: string;
                    SgTrackerProjectsUser: string;
                    ShowUserApikeys: string;
                    ShowUserProfile: string;
                    Skins: string;
                    SmtpHost: string;
                    SmtpPort: string;
                    source: string;
                    SourceCode: string;
                    SourceCodeError: string;
                    SourceDeleteWarningMessage: string;
                    SourceName: string;
                    Sources: string;
                    Sources_Create: string;
                    Sources_Delete: string;
                    Sources_Edit: string;
                    Sources_Getall: string;
                    SourceTypeExist: string;
                    SourceTypeName: string;
                    StartTime: string;
                    StartTyping: string;
                    SuccessfullyChanged: string;
                    SuccessfullyDeleted: string;
                    SuccessfullyRegistered: string;
                    SuccessfullyUpdated: string;
                    Surname: string;
                    SystemSettingsKeyName: string;
                    Task: string;
                    TaskName: string;
                    Tasks: string;
                    TenancyName: string;
                    TenantDeleteWarningMessage: string;
                    TenantIdIsNotActive{0}: string;
                    TenantIsNotActive: string;
                    TenantName_Regex_Description: string;
                    TenantNameCanNotBeEmpty: string;
                    TenantNameMustBeAtLeastTwoChars: string;
                    Tenants: string;
                    TenantSelection: string;
                    TenantSelection_Detail: string;
                    TestEmailSettingsHeader: string;
                    ThereAreEitherSomeTimeConflictsOrStartTimeGreaterThanEndTime: string;
                    ThereIsNoTenantDefinedWithName{0}: string;
                    ThisFieldIsRequired: string;
                    ThisFieldMustNotBeBlank: string;
                    ThisLinkIsInvalid: string;
                    Timesheet: string;
                    TimeSheet: string;
                    TimeSheet_Insert: string;
                    TimeSheetDownload: string;
                    TimeSheetProjectReport: string;
                    TimeTracking: string;
                    TimeTrackingDurationInMinutes: string;
                    TimeUse: string;
                    TotalClientsCount: string;
                    TotalProjectsCount: string;
                    TotalRecordsCount: string;
                    TotalRolesCount: string;
                    TotalSourceCount: string;
                    TotalTasksCount: string;
                    TotalTimePdfDownload: string;
                    TotalTrackTimeXlsDoc: string;
                    TotalUsersCount: string;
                    TrackTime: string;
                    UnImplementedMethod: string;
                    UnknownTenantId{0}: string;
                    UpdateAppSettingsLogo: string;
                    UpdateNewClientUser: string;
                    UpdatePassword: string;
                    UpdateTask: string;
                    UpdateTrackTime: string;
                    UpdateUserApikeys: string;
                    UpdateUserProfile: string;
                    UrlApiKey: string;
                    UseDefaultCredentials: Ustring;
                    UserApikeys: string;
                    UserApiKeyUpdated: string;
                    UserDeleteWarningMessage: string;
                    UserDetails: string;
                    UserEmailIsNotConfirmedAndCanNotLogin: string;
                    UserExitError: string;
                    UserID:string;
                    UserIdError: string;
                    UserIsNotActiveAndCanNotLogin: string;
                    UserLockedOutMessage: string;
                    UserName: string;
                    UserNameOrEmail: string;
                    UserNameTenant: string;
                    UserProjectsForAdminPanel: string;
                    UserRoles: string;
                    Users: string;
                    UsersActivation: string;
                    UserSearchForScreenshot: string;
                    UserSearchForTimesheet: string;
                    UsersTrackTime: string;
                    UseSsl: string;
                    Version: string;
                    WaitingForActivationMessage: string;
                    WaitingForEmailActivation: string;
                    WelcomeMessage: string;
                    WrongInclude: string;
                    XlsDownload: string;
                    Yes: string
                };
            };
        };
        features: {
            allFeatures: {}
        };
        auth: {
            allPermissions: {
                Pages: boolean;
                Pages.Administration: boolean;
                Pages.Administration.Roles: boolean;
                Pages.Administration.Roles.Create: boolean;
                Pages.Administration.Roles.Edit: boolean;
                Pages.Administration.Roles.Delete: boolean;
                Pages.Administration.SetUp: boolean;
                Pages.Administration.SetUp.Sources: boolean;
                Pages.Administration.SetUp.Sources.Create: boolean;
                Pages.Administration.SetUp.Sources.Delete: boolean;
                Pages.Administration.SetUp.Sources.Edit: boolean;
                Pages.Administration.Users: boolean;
                Pages.Administration.Users.Create: boolean;
                Pages.Administration.Users.Edit: boolean;
                Pages.Administration.Users.Delete: boolean;
                Pages.Administration.Users.ResetPassword: boolean;
                Pages.Administration.Client: boolean;
                Pages.Administration.Client.Create: boolean;
                Pages.Administration.Client.Edit: boolean;
                Pages.Administration.Client.Delete: boolean;
                Pages.Administration.Client.ResetPassword: boolean;
                Pages.EmailManagement: boolean;
                Pages.EmailManagement.Create: boolean;
                Pages.EmailManagement.Edit: boolean;
                Pages.EmailManagement.Get: boolean;
                Pages.Administration.UserApiKeys: boolean;
                Pages.Administration.UserApiKeys.ShowUserApikeys: boolean;
                Pages.Administration.UserApiKeys.DeleteUserApikeys: boolean;
                Pages.Administration.UserApiKeys.CreateOrUpdateUserApikeys: boolean;
                Pages.Administration.AppSettings: boolean;
                Pages.Administration.AppSettings.GetDashboardLogo: boolean;
                Pages.Administration.AppSettings.UpdateDashboardLogo: boolean;
                Pages.Administration.Settings: boolean;
                Pages.Administration.Settings.Create: boolean;
                Pages.Administration.Settings.Edit: boolean;
                Pages.Administration.Settings.ShowSettingsValueByID: boolean;
                Pages.Administration.Current.User.Permission: boolean;
                Pages.MyAccount: boolean;
                Pages.MyAccount.GetUserProfile: boolean;
                Pages.MyAccount.UpdateUserProfile: boolean;
                Pages.MyAccount.CreateOrUpdateUserApiKey: boolean;
                Pages.MyAccount.DeleteUserApiKey: boolean;
                Pages.MyAccount.GetUserApiKeys: boolean;
                Pages.Tenants: boolean;
                Pages.Tenants.Create: boolean;
                Pages.Tenants.Edit: boolean;
                Pages.Tenants.ChangeFeatures: boolean;
                Pages.Tenants.Delete: boolean;
                Pages.Tenants.Impersonation: boolean;
                Pages.GeneralSettings.ProfileImage: boolean;
                Pages.GeneralSettings.ChangePassword: boolean;
                Pages.GeneralSettings.ChangeLanguage: boolean;
                Pages.GeneralSettings.UserNameTenantID: boolean;
                Pages.GeneralSettings.ProjectsByUserForAdminpanel: boolean;
                Pages.GeneralSettings.GetAllSourceTypes: boolean;
                Pages.Report: boolean;
                Pages.Report.Screenshot: boolean;
                Pages.Report.Screenshot.Delete: boolean;
                Pages.Report.Screenshots: boolean;
                Pages.Report.Screenshot.ImagePath: boolean;
                Pages.Report.Screenshot.Consecutive.Images: boolean;
                Pages.Report.TimeSheet: boolean;
                Pages.Report.TimeSheet.XlsDownload: boolean;
                Download.Total.Track.Time.Xls.Document: boolean;
                Pages.Report.TimeSheet.PdfDownload: boolean;
                Pages.Report.TimeSheet.TotalTimePdfDownload: boolean;
                Pages.Report.TimeSheet.UserSearch: boolean;
                Pages.Report.Timesheet.Employee.Details: boolean;
                Pages.Report.Timesheet.Total.Track.Time.Employee.Details: boolean;
                Pages.ResetPassword: boolean;
                Pages.EditTrackTime: boolean;
                Pages.EditTrackTime.AddTrackTime: boolean;
                Pages.EditTrackTime.DeleteTrackTime: boolean;
                Pages.EditTrackTime.UpdateTrackTime: boolean;
                Pages.EditTrackTime.GetAllTrackTime: boolean;
                Pages.EditTrackTime.AddTimeTracker: boolean;
                Pages.Dashboard: boolean;
                Pages.Dashboard.DashboardScreenshots: boolean;
                Pages.Dashboard.DashboardUsersTrackTime: boolean;
                Pages.Redmine.Projects: boolean;
                Pages.Redmine.Projects.LastProjectTrackTime: boolean;
                Pages.Redmine.Projects.User.Projects: boolean;
                Pages.Redmine.Projects.Tasks: boolean;
                Pages.Redmine.Projects.Tasks.Create: boolean;
                Pages.Redmine.Projects.Tasks.Edit: boolean;
                Pages.Redmine.Projects.Tasks.User.Task.Details: boolean
            };
            grantedPermissions: {
                Pages: boolean;
                Pages.Administration: boolean;
                Pages.Administration.Roles: boolean;
                Pages.Administration.Roles.Create: boolean;
                Pages.Administration.Roles.Edit: boolean;
                Pages.Administration.Roles.Delete: boolean;
                Pages.Administration.SetUp: boolean;
                Pages.Administration.SetUp.Sources: boolean;
                Pages.Administration.SetUp.Sources.Create: boolean;
                Pages.Administration.SetUp.Sources.Delete: boolean;
                Pages.Administration.SetUp.Sources.Edit: boolean;
                Pages.Administration.Users: boolean;
                Pages.Administration.Users.Create: boolean;
                Pages.Administration.Users.Edit: boolean;
                Pages.Administration.Users.Delete: boolean;
                Pages.Administration.Users.ResetPassword: boolean;
                Pages.Administration.Client: boolean;
                Pages.Administration.Client.Create: boolean;
                Pages.Administration.Client.Edit: boolean;
                Pages.Administration.Client.Delete: boolean;
                Pages.Administration.Client.ResetPassword: boolean;
                Pages.Administration.UserApiKeys: boolean;
                Pages.Administration.UserApiKeys.ShowUserApikeys: boolean;
                Pages.Administration.UserApiKeys.DeleteUserApikeys: boolean;
                Pages.Administration.UserApiKeys.CreateOrUpdateUserApikeys: boolean;
                Pages.Administration.AppSettings: boolean;
                Pages.Administration.AppSettings.GetDashboardLogo: boolean;
                Pages.Administration.AppSettings.UpdateDashboardLogo: boolean;
                Pages.Administration.Settings: boolean;
                Pages.Administration.Settings.Create: boolean;
                Pages.Administration.Settings.Edit: boolean;
                Pages.Administration.Settings.ShowSettingsValueByID: boolean;
                Pages.Administration.Current.User.Permission: boolean;
                Pages.MyAccount: boolean;
                Pages.MyAccount.GetUserProfile: boolean;
                Pages.MyAccount.UpdateUserProfile: boolean;
                Pages.MyAccount.CreateOrUpdateUserApiKey: boolean;
                Pages.MyAccount.DeleteUserApiKey: boolean;
                Pages.MyAccount.GetUserApiKeys: boolean;
                Pages.GeneralSettings.ProfileImage: boolean;
                Pages.GeneralSettings.ChangePassword: boolean;
                Pages.GeneralSettings.ChangeLanguage: boolean;
                Pages.GeneralSettings.UserNameTenantID: boolean;
                Pages.GeneralSettings.ProjectsByUserForAdminpanel: boolean;
                Pages.GeneralSettings.GetAllSourceTypes: boolean;
                Pages.Report: boolean;
                Pages.Report.Screenshot: boolean;
                Pages.Report.Screenshot.Delete: boolean;
                Pages.Report.Screenshots: boolean;
                Pages.Report.Screenshot.ImagePath: boolean;
                Pages.Report.Screenshot.Consecutive.Images: boolean;
                Pages.Report.TimeSheet: boolean;
                Pages.Report.TimeSheet.XlsDownload: boolean;
                Download.Total.Track.Time.Xls.Document: boolean;
                Pages.Report.TimeSheet.PdfDownload: boolean;
                Pages.Report.TimeSheet.TotalTimePdfDownload: boolean;
                Pages.Report.TimeSheet.UserSearch: boolean;
                Pages.Report.Timesheet.Employee.Details: boolean;
                Pages.Report.Timesheet.Total.Track.Time.Employee.Details: boolean;
                Pages.ResetPassword: boolean;
                Pages.EditTrackTime: boolean;
                Pages.EditTrackTime.AddTrackTime: boolean;
                Pages.EditTrackTime.DeleteTrackTime: boolean;
                Pages.EditTrackTime.UpdateTrackTime: boolean;
                Pages.EditTrackTime.GetAllTrackTime: boolean;
                Pages.EditTrackTime.AddTimeTracker: boolean;
                Pages.Dashboard: boolean;
                Pages.Dashboard.DashboardScreenshots: boolean;
                Pages.Dashboard.DashboardUsersTrackTime: boolean;
                Pages.Redmine.Projects: boolean;
                Pages.Redmine.Projects.LastProjectTrackTime: boolean;
                Pages.Redmine.Projects.User.Projects: boolean;
                Pages.Redmine.Projects.Tasks: boolean;
                Pages.Redmine.Projects.Tasks.Create: boolean;
                Pages.Redmine.Projects.Tasks.Edit: boolean;
                Pages.Redmine.Projects.Tasks.User.Task.Details: boolean
            }
        };
        nav: {
            menus: {
                MainMenu: {
                    name: string;
                    displayName: string;
                    customData: null | string;
                    items: []
                }
            }
        };
        setting: {
            values: {
                Abp.Localization.DefaultLanguageName: null;
                Abp.Notifications.ReceiveNotifications: boolean;
                Abp.Timing.TimeZone: any;
                Abp.Zero.UserManagement.IsEmailConfirmationRequiredForLogin: boolean;
                Abp.Zero.OrganizationUnits.MaxUserMembershipCount: number;
                Abp.Zero.UserManagement.TwoFactorLogin.IsEnabled: boolean;
                Abp.Zero.UserManagement.TwoFactorLogin.IsRememberBrowserEnabled: boolean;
                Abp.Zero.UserManagement.TwoFactorLogin.IsEmailProviderEnabled: boolean;
                Abp.Zero.UserManagement.TwoFactorLogin.IsSmsProviderEnabled: boolean;
                Abp.Zero.UserManagement.UserLockOut.IsEnabled: boolean;
                Abp.Zero.UserManagement.UserLockOut.MaxFailedAccessAttemptsBeforeLockout: number;
                Abp.Zero.UserManagement.UserLockOut.DefaultAccountLockoutSeconds: number;
                Abp.Zero.UserManagement.PasswordComplexity.RequireDigit: boolean;
                Abp.Zero.UserManagement.PasswordComplexity.RequireLowercase: boolean;
                Abp.Zero.UserManagement.PasswordComplexity.RequireNonAlphanumeric: boolean;
                Abp.Zero.UserManagement.PasswordComplexity.RequireUppercase: boolean;
                Abp.Zero.UserManagement.PasswordComplexity.RequiredLength: number;
                App.UiTheme: string;
                TimeTrackingDurationInMin: number;
                Abp.TrackingManagement.TimeTrackingDuration: number;
                Abp.TrackingManagement.IdleTime: number;
                Abp.TrackingManagement.IdleModalOpenTime: number;
                Abp.TrackingManagement.ScreenshotRandom: boolean;
                Abp.Settings.TimeZone: string;
                Abp.TrackingManagement.ApplicationVersion: any;
                Abp.Daily.Minimum.Time.Mail.Trigger: number
            }
        };
        clock: {
            provider: string
        };
        timing: {
            timeZoneInfo: {
                windows: {
                    timeZoneId: any;
                    baseUtcOffsetInMilliseconds: any;
                    currentUtcOffsetInMilliseconds: any;
                    isDaylightSavingTimeNow: boolean;
                };
                iana: {
                    timeZoneId: any;
                }
            }
        };
        security: {
            antiForgery: {
                tokenCookieName: any;
                tokenHeaderName: any;
            }
        };
        custom: {}
    };
    targetUrl: string | null;
    success: boolean;
    error: string | null;
    unAuthorizedRequest: boolean;
    __abp: boolean
}

interface languages{
    {
        name: string;
        displayName: string;
        icon: string;
        isDefault: boolean;
        isDisabled: boolean;
        isRightToLeft: boolean
    };
}
interface Sources{
    name: string;
    type: string;
}